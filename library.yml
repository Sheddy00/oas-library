openapi: '3.1.0'
info:
  title: OAS Library
  version: '1.0'
  description: STD22012
servers:
  - url: https://oas-library.com
tags: 
  - name: books
  - name: authors
  - name: topics
paths:
  /books:
    get:
      tags:
        - "books"
      summary: Get all books
      description: The returned books are ordered by updated datetime.
      operationId: getBooks
      parameters:
        - in: query
          name: bookName
          description: Filter return books by given name
          required: false
          schema: 
            type: string 
        - in: query
          name: realeseDateStart
          description: Filter books with a realese date greater than or equal to this date
          required: false
          schema: 
            type: string 
            format: date
        - in: query 
          name: realeseDateEnd
          description: Filter books with a realese date less than or equal to this date
          required: false
          schema: 
            type: string 
            format: date
        - $ref: '#/components/parameters/queryPagination'
      responses:
        200: 
          description: The list of filtered books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/book"
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    post: 
      tag:
        - "book"
      summary: Insert new book
      requestBody:
        required: true
        content:
          application/json:
            schema: 
            type: array
            items:
              $ref: '#/components/schemas/book'
      responses:
        200:
          description: new book inserted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/book'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tag:
        - "books"
      summary: Create or update a list of books
      requestBody:
        required: true 
        content:
          application/json:
            schema:
            type: array
            items:
              $ref: '#/components/schemas/book'
      responses:
        200:
          description: update book successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/book'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tag:
        - "book"
      summary: delete book
      parameters:
        - in: query
          name: bookId
          schema:
            type: integer
          description: book ID to delete
      responses: 
        200:
          description: book deleted with sucess 

  /author:
    get:
      tag:
        - "authors"
      summary: Get all authors
      description: Show all authors filter by name
      operationId: getAuthors
      parameters:
        - in: query 
          name: authorName
          description: Filter return author by given name
          required: false
          schema:
            type: string 
        - $ref: '#/components/parameters/queryPagination'
      responses:
        200:
          description: Author filtered
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#/components/schemas/author'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string 
        500: 
          description: Internal Server Error 
          content:
            application/json:
              schema: 
                type: object
                properties:
                  error:
                    type: string
    post:
      tag:
        "authors"
      summary: Insert new author
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/author'
      responses:
        200:
          description: author inserted successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/book'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    put:
      tag:
        "authors"
      summary: Create or update authors
      requestBody:
        required: true 
        content:
          application/json:
            schema:
            type: array
            items:
              $ref: '#/components/schemas/author'
      responses:
        200:
          description: author updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/author'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        403:
          description: Forbidden
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        404:
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
        500:
          description: Internal server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
    delete:
      tag:
        "authors"
      summary: Delete author 
      parameters:
        - in: query
          name: authorId
          schema:
            type: integer
          description: author ID to delete
      responses: 
        200:
          description: author deleted with sucess 
          
components:
  schemas:
    book: 
      type: object
      properties:
        id:
          type: string 
        bookName: 
          type: string 
        author:
          $ref: '#/components/schemas/author'
        pageNumbers:
          type: integer
        topic:
          type: string
          enum:
            - ROMANCE
            - COMEDY
            - OTHER
        realeseDate:
          type: string 
          format: date  
      required:
        - id 
        - bookName
        - author
        - pageNumbers 
        - topic 
        - realeseDate
    author:
      type : object
      properties: 
        id:
          type: string
        name : 
          type: string
        sex: 
          type: string 
          enum:
            - M
            - F
      required:
        - id 
        - name 
        - sex
  parameters:
    Page:
      name: page
      description: Number for pagination
      in: query
      schema: 
        type: integer
        default: 1
      required: false
    PageSize:
      name: pageSize 
      description: Size of pagination
      in: query 
      schema: 
        type: integer
        default: 30
      required: false
    queryPagination:
      name: queryPagination 
      description: reusable pagination
      in: query 
      schema: 
        type: object
        properties:
          page:
            $ref: '#/components/parameters/Page'
          PageSize:
            $ref: '#/components/parameters/PageSize'
      required: false